Provision Server Bulb #1
------------------------
db = MeshDB("database/example_database.json")
db.provisioners
p = Provisioner(device, db)
p.scan_start()
p.scan_stop()
p.provision(name="Light bulb #1")
cc = ConfigurationClient(db)
device.model_add(cc)
cc.publish_set(8, 0)
cc.composition_data_get()
cc.appkey_add(0)
cc.model_app_bind(db.nodes[0].unicast_address, 0, mt.ModelId(0x1000))
gc_Bulb1 = GenericOnOffClient()
device.model_add(gc_Bulb1)
gc_Bulb1.publish_set(0, 0)

Provision Server Bulb #2
------------------------
p.scan_start()
p.scan_stop()
p.provision(name="Light bulb #2")
cc.publish_set(9, 1)
cc.composition_data_get()
cc.appkey_add(1)
cc.model_app_bind(db.nodes[1].unicast_address, 1, mt.ModelId(0x1000))
gc_Bulb2 = GenericOnOffClient()
device.model_add(gc_Bulb2)
gc_Bulb2.publish_set(1,1)

Add servers to the same group
-----------------------------
cc.publish_set(8, 0)   #pick server #1 to configure
cc.model_publication_set(db.nodes[0].unicast_address, mt.ModelId(0x1000), mt.Publish(db.groups[0].address, index=0, ttl=1))
cc.publish_set(9, 1)   #pick server #2 to configure
cc.model_publication_set(db.nodes[1].unicast_address, mt.ModelId(0x1000), mt.Publish(db.groups[0].address, index=1, ttl=1))

Provision Client Switch
-----------------------
p.scan_start()
p.scan_stop()
p.provision(name="Switch")
cc.publish_set(10, 2)
cc.composition_data_get()
cc.appkey_add(0)
cc.appkey_add(1)
cc.model_app_bind(db.nodes[2].unicast_address, 0, mt.ModelId(0x1001))
cc.model_publication_set(db.nodes[2].unicast_address, mt.ModelId(0x1001), mt.Publish(db.nodes[0].unicast_address, index=0, ttl=1))
cc.model_app_bind(db.nodes[2].unicast_address + 1, 1, mt.ModelId(0x1001))
cc.model_publication_set(db.nodes[2].unicast_address + 1, mt.ModelId(0x1001), mt.Publish(db.nodes[1].unicast_address, index=1, ttl=1))
